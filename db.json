{
  "posts": [
    {
      "id": 2,
      "title": "Where does it new Data?",
      "body": "Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of de Finibus Bonorum et Malorum (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, Lorem ipsum dolor sit amet.., comes from a line in section 1.10.32."
    },
    {
      "id": "be37b956-8d65-4bb6-bf0c-9424c5526d5d",
      "title": "Where can I get some Code?",
      "body": "There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc."
    },
    {
      "id": "5ed668fd-4ef8-4a63-b543-a4a82691bf83",
      "title": "Why do we use it this?",
      "body": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like)."
    },
    {
      "id": "02675b6d-cdd2-4cf1-b27a-4da8831dede0",
      "title": "What are post test questions are?",
      "body": "Free Download Searching SVG vector file in monocolor and multicolor type for Sketch and Figma from Searching Vectors svg vector collection. Searching Vectors SVG vector illustration graphic art design format.\n\nCOLLECTION: Online Marketing Filled\nLICENSE: CC0 License\nUPLOADER: SVG Repo"
    },
    {
      "id": "a3e67240-aef7-4dde-88f6-059025eebef1",
      "title": "What are the 4 types of usability test questions?",
      "body": " Beginners Level Software Testing Interview Questions and Answers for Freshers. 1. What are the phases involved in Software Testing Life ...\nTest Cycle Closure: It involves calling out the t...\nTest Execution: It is the process of executing the ...\nTest Case Development: Here, detailed test ca...\nTest Planning: In this phase, the test strategy is ..."
    },
    {
      "id": "4e58b5fc-1e0f-4fe6-8de2-03a6907d771d",
      "title": "Mutate or MutateAsync newData",
      "body": "useMutation gives you two functions - mutate and mutateAsync. What's the difference, and when should you use which one?\n\nmutate doesn't return anything, while mutateAsync returns a Promise containing the result of the mutation. So you might be tempted to use mutateAsync when you need access to the mutation response, but I would still argue that you should almost always use mutate.\n\nYou can still get access to the data or the error via the callbacks, and you don't have to worry about error handling: Since mutateAsync gives you control over the Promise, you also have to catch errors manually, or you might get an unhandled promise rejection."
    },
    {
      "id": "46f80deb-cfc1-4955-9aab-312b3d1c0f2a",
      "title": "Mutate or MutateAsync ",
      "body": "useMutation gives you two functions - mutate and mutateAsync. What's the difference, and when should you use which one?\n\nmutate doesn't return anything, while mutateAsync returns a Promise containing the result of the mutation. So you might be tempted to use mutateAsync when you need access to the mutation response, but I would still argue that you should almost always use mutate.\n\nYou can still get access to the data or the error via the callbacks, and you don't have to worry about error handling: Since mutateAsync gives you control over the Promise, you also have to catch errors manually, or you might get an unhandled promise rejection."
    }
  ],
  "comment": [
    {
      "id": "1",
      "body": "first comment",
      "postId": "be37b956-8d65-4bb6-bf0c-9424c5526d5d"
    },
    {
      "id": "2",
      "body": "second comment",
      "postId": "be37b956-8d65-4bb6-bf0c-9424c5526d5d"
    },
    {
      "id": "cec9a0d6-3587-4381-be51-0b89e84afcae",
      "postId": "4e58b5fc-1e0f-4fe6-8de2-03a6907d771d",
      "body": "second comment"
    },
    {
      "id": "a63bedb4-7fe7-4245-bd40-1ee2a301bcf6",
      "postId": "4e58b5fc-1e0f-4fe6-8de2-03a6907d771d",
      "body": "second comment"
    },
    {
      "id": "67e00bcf-e767-4331-90f3-2e7c5f8b7382",
      "postId": "4e58b5fc-1e0f-4fe6-8de2-03a6907d771d",
      "body": "second comment"
    },
    {
      "id": "c1e2183f-cea1-4968-afea-f00ae3b0bfcd",
      "postId": "4e58b5fc-1e0f-4fe6-8de2-03a6907d771d",
      "body": "second comment"
    },
    {
      "id": "9004cfbd-b5db-4f21-a770-4542d9c1f35c",
      "postId": "02675b6d-cdd2-4cf1-b27a-4da8831dede0",
      "body": "test comment"
    },
    {
      "id": "d9d249e7-2ca9-4f08-8d25-56110d8ad12e",
      "postId": "02675b6d-cdd2-4cf1-b27a-4da8831dede0",
      "body": "test comment"
    },
    {
      "id": "8b806878-77d1-4a1c-8fbe-1cbc0be3474c",
      "postId": "02675b6d-cdd2-4cf1-b27a-4da8831dede0",
      "body": "test comment"
    },
    {
      "id": "208d746e-cdf8-44b7-92e3-f2780eacfc93",
      "postId": "02675b6d-cdd2-4cf1-b27a-4da8831dede0",
      "body": "test comment"
    },
    {
      "id": "176361d0-c6f6-41a2-a28f-bff6615de48c",
      "postId": "4e58b5fc-1e0f-4fe6-8de2-03a6907d771d",
      "body": "test comment"
    },
    {
      "id": "92fe5ffc-7959-49a7-8b10-4ba2a7bc98a2",
      "postId": "2",
      "body": "dsdsadsada"
    },
    {
      "id": "d7a5fee0-cbea-4c1f-9480-698110c1db15",
      "postId": "2",
      "body": "dsdsadsada"
    }
  ]
}